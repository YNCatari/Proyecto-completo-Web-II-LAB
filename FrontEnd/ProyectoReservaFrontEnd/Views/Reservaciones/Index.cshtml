@model ProyectoReservaFrontEnd.Models.cliente
@{
    ViewBag.Title = "Reservaciones";

    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker-standalone.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>

    <link href="https://fonts.googleapis.com/css?family=Poppins:400,600&display=swap" rel="stylesheet">
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css'>
    <link href="~/Source/css/style2.css" rel="stylesheet" />
}
<!-- ======= Team Reservaciones ======= -->
<section id="team" class="team">
    <div class="content">
        <div class="content__inner">
            <div class="container">
                <h2 class="content__title content__title--m-sm">Reservar una habitación en nuestro hotel y disfruta de una experiencia inolvidable</h2>
            </div>
            <div class="container overflow-hidden">
                <div class="multisteps-form">
                    <div class="row">
                        <div class="col-12 col-lg-8 ml-auto mr-auto mb-4">
                            <div class="multisteps-form__progress">
                                <button class="multisteps-form__progress-btn js-active" type="button" title="User Info" >Registro del Huésped</button>
                                <button class="multisteps-form__progress-btn " type="button" title="Address"  disabled>Selección de Habitacion</button>
                                <button class="multisteps-form__progress-btn " type="button" title="Order Info" disabled>Registro de la Reserva</button>
                                <button class="multisteps-form__progress-btn " type="button" title="Message" disabled>Registro de Pago</button>
                                <button class="multisteps-form__progress-btn " type="button" title="Message" disabled>Completo</button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 col-lg-8 m-auto">
                                <div class="shadow p-4 rounded bg-white js-active" data-animation="scaleIn">

                                    <h3 class="multisteps-form__title">Datos del Huésped</h3>
                                    <hr class="shb-total-separator"> 

                                    @using (Html.BeginForm("Guardar", "Reservaciones", FormMethod.Post, new { id = "frm-resrvaciones" }))
                                    {
                                        @Html.HiddenFor(x => x.idcliente)

                                        <div class="multisteps-form__content">
                                            <div class="row">
                                                <div class="col-12 col-md-4">
                                                    <div class="form-group">
                                                        <label for="tipo_documento">Tipo Documento:</label>
                                                        <select name="tipo_documento" class="form-control">
                                                            <option @(Model.tipo_documento == "DNI" ? "selected" : "") value="DNI">DNI</option>
                                                            <option @(Model.tipo_documento == "PASAPORTE" ? "selected" : "") value="PASAPORTE">PASAPORTE</option>
                                                        </select>
                                                        @Html.ValidationMessageFor(x => x.tipo_documento, null, new { @class = "label label-danger" })
                                                    </div>
           
                                                    <div class="form-group">
                                                        <label for="numero_documento">Numero Documento:</label>
                                                            @Html.TextBoxFor(x => x.numero_documento, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(x => x.numero_documento, null, new { @class = "label label-danger" })
                                                    </div>
  
                                                </div>
                                            </div>
                                            <div class="form-row mt-0">
                                                <div class="col-12 col-md-6">
                                                    <div class="form-group">
                                                        <label for="nombres">Nombres:</label>
                                                        @Html.TextBoxFor(x => x.nombres, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(x => x.nombres, null, new { @class = "label label-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-12 col-md-6">
                                                    <div class="form-group">
                                                        <label for="apellidos">Apellidos:</label>
                                                        @Html.TextBoxFor(x => x.apellidos, new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(x => x.apellidos, null, new { @class = "label label-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-row mt-0">
                                                    <div class="col-12 col-md-6">
                                                        <div class="form-group">
                                                            <label for="direccion">Direccion:</label>
                                                            @Html.TextBoxFor(x => x.direccion, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(x => x.direccion, null, new { @class = "label label-danger" })

                                                        </div>
                                                    </div>
                                                    <div class="col-12 col-md-6">
                                                        <div class="form-group">
                                                            <label for="telefono">Telefono:</label>
                                                            @Html.TextBoxFor(x => x.telefono, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(x => x.telefono, null, new { @class = "label label-danger" })
                                                        </div>
                                                    </div>
                                            </div>

                                            <div class="form-row mt-0">
                                                <div class="col-12 col-md-6">
                                                    <div class="form-group">
                                                        <label for="email">Email:</label>
                                                        @Html.TextBoxFor(x => x.email, new { @class = "form-control", @type = "email" })
                                                        @Html.ValidationMessageFor(x => x.email, null, new { @class = "label label-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-12 col-md-6">
                                                    <label for="estado">Estado:</label>
                                                    <select name="estado" class="form-control">
                                                        <option @(Model.estado == "A" ? "selected" : "") value="A">Activo</option>
                                                        <option @(Model.estado == "I" ? "selected" : "") value="I">Inactivo</option>
                                                    </select>
                                                    @Html.ValidationMessageFor(x => x.estado, null, new { @class = "label label-danger" })
                                                </div>

                                            </div>

                                                <div class="button-row d-flex mt-4">
                                                    <button type="submit" class="btn btn-danger ml-auto">Siguiente</button>
                                                </div>

                                            </div>
                                    }
                                </div>
         

                        </div>
                    </div>
                    <br />
                </div>
            </div>

        </div>
    </div>
    <script src="~/Source/js/function.js"></script>
</section><!-- End Team Section -->

<script>
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();

    $(function () {
        $('#dob').datetimepicker({
            format: 'DD/MM/YYYY',
            icons: {
                previous: "fas fa-chevron-left",
                next: "fas fa-chevron-right",
            },
        });
        $('.input-group-append').click(function () {
            $('.form-control').trigger('focus');
        });
    });

    $(function () {
        $('#dob2').datetimepicker({
            format: 'DD/MM/YYYY',
            icons: {
                previous: "fas fa-chevron-left",
                next: "fas fa-chevron-right",
            },
        });
        $('.input-group-append').click(function () {
            $('.form-control').trigger('focus');
        });
    });
</script>



